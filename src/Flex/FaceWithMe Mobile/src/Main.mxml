<?xml version="1.0" encoding="utf-8"?>
<s:TabbedViewNavigatorApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		width="100%"
		height="100%"
		creationComplete="initHandler(event);"
		>

	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<fx:Style source="css/Main.css" />

	<fx:Script>
        <![CDATA[
			import components.InformationPopup;
			import data.SettingsData;
			
			import flash.media.Camera;
			import flash.events.Event;
			import flash.data.EncryptedLocalStore;
			
			import spark.events.IndexChangeEvent;

			import mx.events.StateChangeEvent;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.collections.ArrayList

			[Bindable]
            public var cameraOptions:ArrayList;
			[Bindable]
			public var qualityOptions:ArrayList;
			
			public var settings:SettingsData = new SettingsData();
			
			public var DEBUG:Boolean = true;
			public var debugText:String = "";
			public function log(string:String):void {
				if (DEBUG) {
					string = "Widok " + tabbedNavigator.activeView.title + ": " + string;
					debugText += string + "\n";
					trace(string);
				}
			}
			
			protected function initHandler(event:Event):void {
				// ustaw opcje spinnerów
				cameraOptions = new ArrayList(Camera.names);
				qualityOptions = new ArrayList([
					{"name" : "80x60", "width" : 80, "height" : 60},
					{"name" : "160x120", "width" : 160, "height" : 120},
					{"name" : "320x240", "width" : 320, "height" : 240},
					{"name" : "640x480", "width" : 640, "height" : 480},
				]);
				
				// event odpalany w momencie zmiany tabów, przed ruszaniem widoku
				tabbedNavigator.addEventListener('changing', tabbedNavigatorChangingHandler);
				// jak nie ma ustawień to odpal najpierw zakładkę ustawienia, a 'nie podziel się'
				if (!areSettingsSet())
					tabbedNavigator.selectedIndex = 1;
			}
			
			protected function tabbedNavigatorChangingHandler(event:IndexChangeEvent):void {
				log('tabbedNavigatorChangingHandler start');
				// nie wyświetlaj 'podziel się' jak nie ma wypełnionego pola hasła i loginu
				if (event.newIndex == 0 && !areSettingsSet()) {
					event.preventDefault();
					settingsNotSetConfirmationPopup();
				}
            }
			
			// wywołaj okienko informacji, że musisz wypełnić ustawienia
			protected function settingsNotSetConfirmationPopup():void {
                var informationPopup:InformationPopup = new InformationPopup();
                informationPopup.open(this, true);
				informationPopup.informationText.text = "Musisz uzupełnić dane konta, aby mieć możliwość dzielenia się video.";
				PopUpManager.centerPopUp(informationPopup);
            }

			private function areSettingsSet():Boolean {
				log('areSettingsSet: true');
				return true;
			}
        ]]>
    </fx:Script>
	<s:navigators>
		<s:ViewNavigator width="100%" height="100%" label="Podziel się!" firstView="views.ShareForm" />
		<s:ViewNavigator width="100%" height="100%" label="Ustawienia" firstView="views.Settings" />
		<s:ViewNavigator width="100%" height="100%" label="Debug" firstView="views.Debug" />
	</s:navigators>
</s:TabbedViewNavigatorApplication>